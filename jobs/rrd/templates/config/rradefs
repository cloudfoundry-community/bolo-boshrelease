<%
# vim:ft=eruby
def in_minutes(s)
  m = s.match('(\d+)([mhd])$')
  if m
    case m[2]
    when 'm'; return m[1].to_i
    when 'h'; return m[1].to_i * 60
    when 'd'; return m[1].to_i * 60 * 24
    end
  end

  raise "bad time spec for bolo.rrd.retention - '#{s}' doesn't match \d+[mhd]"
end

rras = p('bolo.rrd.retention', nil)
if !rras
  rras = [{
    'at'  => '1m',
    'for' => '8d',
  }]
end

pdp = 1
rras.each do |rra|
  steps = pdp * in_minutes(rra["at"])
  rows  = in_minutes(rra["for"]) / steps
  %>RRA:AVERAGE:0.5:<%= steps %>:<%= rows %> <%
  %>RRA:MIN:0.5:<%= steps %>:<%= rows %> <%
  %>RRA:MAX:0.5:<%= steps %>:<%= rows %> <%
end
%>
